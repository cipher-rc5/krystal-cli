{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is the Krystal Cloud API server for accessing pool and position data.",
    "title": "Krystal Cloud API",
    "termsOfService": "https://cloud.krystal.app",
    "contact": {
      "name": "Krystal API Support",
      "url": "https://cloud.krystal.app"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0"
  },
  "host": "cloud-api.krystal.app",
  "basePath": "/",
  "paths": {
    "/v1/chains": {
      "get": {}
    },
    "/v1/chains/{chainId}": {
      "get": {}
    },
    "/v1/pools": {
      "get": {}
    },
    "/v1/pools/{chainId}/{poolAddress}": {
      "get": {}
    },
    "/v1/pools/{chainId}/{poolAddress}/historical": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Get historical price, volume, fee,... data for a specific pool over a time period",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "pools"
        ],
        "summary": "Get pool historical data",
        "parameters": [
          {
            "type": "integer",
            "description": "Chain ID (e.g., 1, 8453, 56)",
            "name": "chainId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Pool address",
            "name": "poolAddress",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Factory address (V2, V3) or Pool manager address (V4)",
            "name": "factoryAddress",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Start time in Unix timestamp (default: 30 days ago)",
            "name": "startTime",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "End time in Unix timestamp (default: current time)",
            "name": "endTime",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Pool historical data response",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "400": {
            "description": "Bad request - Invalid parameters",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid API key",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "402": {
            "description": "Payment required - No credit left",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/v1/pools/{chainId}/{poolAddress}/transactions": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Get transactions for a specific pool over a time period",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "pools"
        ],
        "summary": "Get pool transactions",
        "parameters": [
          {
            "type": "integer",
            "description": "Chain ID (e.g., 1, 8453, 56)",
            "name": "chainId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Pool address",
            "name": "poolAddress",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Factory address (V2, V3) or Pool manager address (V4)",
            "name": "factoryAddress",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Start time in Unix timestamp (default: 24 hours ago)",
            "name": "startTime",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "End time in Unix timestamp (default: current time)",
            "name": "endTime",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 20,
            "description": "Number of results to return (max 5000)",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "Number of results to skip",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Pool transactions response",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "400": {
            "description": "Bad request - Invalid parameters",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid API key",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "402": {
            "description": "Payment required - No credit left",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/v1/positions": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Get all positions for a specific wallet address with optional filtering",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "positions"
        ],
        "summary": "Get user positions",
        "parameters": [
          {
            "type": "string",
            "description": "Wallet address",
            "name": "wallet",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "Chain ID (e.g., 1, 8453, 56)",
            "name": "chainId",
            "in": "query"
          },
          {
            "type": "string",
            "default": "OPEN",
            "description": "Position status filter (OPEN, CLOSED)",
            "name": "positionStatus",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Protocol names to filter by (e.g., Uniswap V3, Uniswap V2)",
            "name": "protocols",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "User positions information",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "400": {
            "description": "Bad request - Invalid parameters",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid API key",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "402": {
            "description": "Payment required - No credit left",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/v1/positions/{chainId}/transactions": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Get transaction history for a specific position",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "positions"
        ],
        "summary": "Get position history",
        "parameters": [
          {
            "type": "integer",
            "description": "Chain ID (e.g., 1, 8453, 56)",
            "name": "chainId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Wallet address. Required for V2",
            "name": "wallet",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Token address",
            "name": "tokenAddress",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Token ID. Required for V3 and V4",
            "name": "tokenId",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Start time in Unix timestamp (default: 30 days ago)",
            "name": "startTimestamp",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "End time in Unix timestamp (default: current time)",
            "name": "endTimestamp",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Limit the number of transactions to return (default: 200)",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Position history",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "400": {
            "description": "Bad request - Invalid parameters",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid API key",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "402": {
            "description": "Payment required - No credit left",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/v1/positions/{chainId}/{positionId}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Get detailed information about a specific position",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "positions"
        ],
        "summary": "Get position detail",
        "parameters": [
          {
            "type": "integer",
            "description": "Chain ID (e.g., 1, 8453, 56)",
            "name": "chainId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Position ID ({NFPM address}-{TokenID})",
            "name": "positionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Position detail information",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "400": {
            "description": "Bad request - Invalid parameters",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid API key",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "402": {
            "description": "Payment required - No credit left",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/v1/protocols": {
      "get": {
        "description": "Get list of all supported DeFi protocols across all chains",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "protocols"
        ],
        "summary": "Get supported protocols",
        "responses": {
          "200": {
            "description": "List of supported protocols",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "KC-APIKey",
      "in": "header"
    }
  }
}
